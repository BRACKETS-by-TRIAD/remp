{form templateForm}
    {include jsCallback, form => $form}
    {input id}
    <div class="row">
        <div class="col-lg-4">
            <div class="form-group fg-float m-b-30">
                <div class="fg-line">
                    {input name, class => 'form-control fg-input'}
                    {label name, class => 'fg-label' /}
                </div>
            </div>

            <div class="form-group fg-float m-b-30">
                <div class="fg-line">
                    {input code, class => 'form-control fg-input'}
                    {label code, class => 'fg-label' /}
                </div>
            </div>

            <div class="form-group fg-float m-b-30">
                <div class="fg-line">
                    {input description, class => 'form-control fg-input'}
                    {label description, class => 'fg-label' /}
                </div>
            </div>

            <div class="row m-b-30">
                <div class="col-lg-6">
                    {label mail_layout_id /}
                    {input mail_layout_id, class => 'selectpicker',  data-live-search => 'true'}
                </div>
                <div class="col-lg-6">
                    {label mail_type_id /}
                    {input mail_type_id, class => 'selectpicker',  data-live-search => 'true'}
                </div>
            </div>

            <div class="form-group m-b-30">
                <div class="toggle-switch" data-ts-color="cyan">
                    {label autologin:, class => 'ts-label'}
                    {input autologin:, hidden => 'hidden'}
                    <label for="frm-templateForm-autologin" class="ts-helper"></label>
                    <i class="zmdi zmdi-help zmdi-hc-fw f-20 m-l-10" data-toggle="tooltip" data-placement="right" data-original-title="If turned on, users will be automatically logged-in after clicking on (specially prepared) link included in email.
If turned off, they might have trouble unsubscribing from your emails and mark it as spam instead."></i>
                </div>
            </div>

            <div class="clearfix m-b-30"></div>

            <div class="form-group fg-float m-b-30">
                <div class="fg-line">
                    {input from, class => 'form-control fg-input'}
                    {label from, class => 'fg-label' /}
                </div>
            </div>

            <div class="form-group fg-float m-b-30">
                <div class="fg-line">
                    {input subject, class => 'form-control fg-input'}
                    {label subject, class => 'fg-label' /}
                </div>
            </div>

            <div class="form-group fg-float m-b-30">
                <div class="fg-line">
                    {input mail_body_text, class => 'form-control fg-input auto-size'}
                    {label mail_body_text, class => 'fg-label' /}
                </div>
            </div>

            <div class="form-group m-b-30">
                {label mail_body_html /}
                {input mail_body_html, class => 'form-control html-editor'}
            </div>

            <div class="row">
                <div class="col-lg-6">
                    {input save, class => 'btn btn-info waves-effect'}
                </div>
            </div>
        </div>

        <div class="col-lg-6 col-lg-offset-1">
            <div id="mail-preview">
                <mail-preview></mail-preview>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        let layouts = {json_encode($layouts)|noescape};
        $(function() {
            let cm = $('.CodeMirror')[0].CodeMirror;
            let vm = remplib.templateForm.bind(
                '#mail-preview',
                cm.getValue(),
                layouts[{$form[mail_layout_id]->value}]
            );
            cm.on('change', function() {
                vm.htmlContent = cm.getValue();
            });
            $('#'+{$form[mail_layout_id]->htmlId}).on('change', function() {
                vm.htmlLayout = layouts[$(this).val()]
            })
        });

    </script>
{/form}

{define jsCallback}
    <script type="application/javascript">
         Nette.validators.RempMailerModuleFormsRulesFormRules_validateAdvancedEmail = function (element, args, value) {
             var regexp = /^(.+) +<(.*)>$/i;
             var email = value.match(regexp);
             if (email !== null) {
                 value = email[2];
             }
             return Nette.validateRule(element, ':email', args, { 'value': value });
         };
    </script>
    <script n:if="$form->getErrors()" type="application/javascript">
        $(document).ready(function() {
            var index = 0;
            {foreach $form->getErrors() as $error}
            index += 250;
            window.setTimeout(function() {
                $.notify({
                    message: {$error}
                }, {
                    allow_dismiss: false,
                    type: 'danger'
                });
            }, index);
            {/foreach}
        });
    </script>
{/define}
