version: "3"

# see .env file for docker-compose ENV variables required for proper run

services:
  nginx:
    image: "nginx:stable"
    volumes:
      - ".:/var/www/html:rw"
      - "./Docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
    ports:
      - "80:80"
    restart: "unless-stopped"
    networks:
      default:
        aliases:
          - "campaign.remp.app"
          - "mailer.remp.app"
          - "sso.remp.app"
          - "beam.remp.app"
          - "tracker.beam.remp.app"
          - "segments.beam.remp.app"
          - "grafana.beam.remp.app"
          - "mailhog.remp.app"
    depends_on:
      - "campaign"
      - "mailer"
      - "sso"
      - "beam"

  redis:
    image: "redis:3.2"
    volumes:
      - "redis-data:/data"

  mailhog:
    image: "mailhog/mailhog:v1.0.0"
    environment:
      MH_domainname: "mailhog.remp.app"

  adminer:
    build: "./Docker/php"
    volumes:
      - ".:/var/www/html:rw"

  # campaign

  campaign:
    build: "./Docker/php"
    environment:
      APP_NAME: "Campaign"
    domainname: "campaign.remp.app"
    hostname: "campaign"
    volumes:
      - ".:/var/www/html:rw"
      - "composer-data:/composer:rw"
      - "yarn-data:/yarn:rw"
    depends_on:
      - "campaign_mysql"
    restart: "unless-stopped"

  campaign_mysql:
    image: "mysql:8.0"
    volumes:
      - "mysql-data-campaign:/var/lib/mysql"
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--skip-character-set-client-handshake"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "remp_campaign"
    restart: "unless-stopped"

  # mailer

  mailer:
    domainname: "mailer.remp.app"
    hostname: "mailer"
    environment:
      APP_NAME: "Sso"
    build: "./Docker/php"
    volumes:
      - ".:/var/www/html:rw"
      - "composer-data:/composer:rw"
      - "yarn-data:/yarn:rw"
    depends_on:
      - "mailer_mysql"
      - "redis"
      - "mailhog"
    restart: "unless-stopped"

  mailer_mysql:
    image: "mysql:8.0"
    volumes:
      - "mysql-data-mailer:/var/lib/mysql"
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--skip-character-set-client-handshake"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "remp_mailer"
    restart: "unless-stopped"

  # sso

  sso:
    build: "./Docker/php"
    environment:
      APP_NAME: "Sso"
    domainname: "sso.remp.app"
    hostname: "sso"
    volumes:
      - ".:/var/www/html:rw"
      - "composer-data:/composer:rw"
      - "yarn-data:/yarn:rw"
    depends_on:
      - "sso_mysql"
    restart: "unless-stopped"

  sso_mysql:
    image: "mysql:8.0"
    volumes:
      - "mysql-data-sso:/var/lib/mysql"
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--skip-character-set-client-handshake"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "remp_sso"
    restart: "unless-stopped"

  # beam

  beam:
    domainname: "beam.remp.app"
    hostname: "beam"
    build: "./Docker/php"
    environment:
      APP_NAME: "Beam"
    volumes:
      - ".:/var/www/html:rw"
      - "composer-data:/composer:rw"
      - "yarn-data:/yarn:rw"
    depends_on:
      - "beam_mysql"
    restart: "unless-stopped"

  beam_mysql:
    image: "mysql:8.0"
    volumes:
      - "mysql-data-beam:/var/lib/mysql"
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--skip-character-set-client-handshake"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "remp_beam"
    ports:
      - "3313:3306"
    restart: "unless-stopped"

  kafka:
    build: "./Docker/kafka"
    environment:
      ADVERTISED_HOST: "kafka"
      ADVERTISED_PORT: "9092"
      CREATE_TOPICS: "beam_events:1:1"
    ports:
      - "9092:9092"
    volumes:
      - "kafka-data:/data"

  influxdb:
    image: "influxdb:1.2"
    volumes:
      - "influxdb-data:/var/lib/influxdb"
    environment:
      INFLUXDB_DATA_MAX_VALUES_PER_TAG: 0 # unlimited due to user_id being a tag (for grouping by)
    ports:
      - "8098:8086"
    restart: "unless-stopped"

  telegraf:
    build: "./Docker/telegraf"
    volumes:
      - "./Docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
    depends_on:
      - "influxdb"
      - "kafka"
    restart: "unless-stopped"

  grafana:
    image: "grafana/grafana"
    volumes:
      - "grafana-data:/var/lib/grafana"
    restart: "unless-stopped"

  beam_tracker:
    build: "./Beam/go/cmd/tracker"
    depends_on:
      - "kafka"
    ports:
      - "8091:8081"
    restart: "unless-stopped"

  beam_segments:
    build: "./Beam/go/cmd/segments"
    depends_on:
      - "influxdb"
    ports:
      - "8092:8082"
    restart: "unless-stopped"

volumes:
  influxdb-data:
    driver: "local"
  kafka-data:
    driver: "local"
  mysql-data-campaign:
    driver: "local"
  mysql-data-mailer:
    driver: "local"
  mysql-data-beam:
    driver: "local"
  mysql-data-sso:
    driver: "local"
  redis-data:
    driver: "local"
  grafana-data:
    driver: "local"

  composer-data:
    driver: "local"
  yarn-data:
    driver: "local"

networks:
  default:
